const Social = require(`${process.cwd()}/base/Social.js`);

class Dice extends Social {

  constructor(client) {
    super(client, {
      name: "dice",
      description: "Rolls a 6-sided dice once unless specified",
      category: "05. Random generators, raffles & votes",
      usage: "dice [rolls] [dice sides]",
      extended: "This returns a random number generated by rolling a x-sided dice x times (rolls a 6-sided dice once if given no argument)",
      cost: 5,
      cooldown: 10,
      hidden: false,
      guildOnly: true,
      aliases: [],
      permLevel: "User"
    });
  }

  async run(message, args, level) { // eslint-disable-line no-unused-vars
    if (message.settings.socialSystem === "true") {
      if (!(await this.cmdPay(message, message.author.id, this.help.cost))) return;
    }

    try {
      const response = await message.channel.send(`${this.client.responses.loadingMessages.random().replaceAll("{{user}}", message.member.displayName)}`);
      const rolls = (args[0] === undefined) ? 1 : args[0];
      const sides = (args[1] === undefined) ? 6 : args[1];
      if (rolls > 100000 || sides > 100000)
        response.edit("Those numbers are just too high so how about no?");
      else {
        let total = 0;
        for (let i = 1; i <= rolls; i++) {
          let number = Math.floor(Math.random() * sides) + 1;
          total += number;
        }
        const average = Math.floor((total / rolls));
        response.edit(`🌺 **${message.author.tag}** ❯ ${message.content} | You rolled a ${sides}-sided dice ${rolls} times! The total is **${total}** (Average: **${average}**)`);
      }
    } catch (error) {
      response.edit(`${this.client.responses.errorMessages.random().replaceAll("{{user}}", message.member.displayName)}`);
      this.client.logger.error(error);
    }
  }
}

module.exports = Dice;
