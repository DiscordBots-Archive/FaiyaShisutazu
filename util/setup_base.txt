const config = {
  // Owner, level 10 by default. You no longer need to supply the owner ID, as the bot
  // will pull this information directly from it's application page.

  // Admins, level 9 by default. Array of user ID strings.
  "admins": [],

  // Supports, level 8 by default. Array of user ID strings
  "supports": [],

  // Enter your keys directly or use and .env file instead before hosting on Heroku
  // [Required] Your Discord bot's token. Available @ https://discordapp.com/developers/applications/me
  "discordKey":  {{discordKey}},
  
  // [Optional - Steam games commands] Your Steam Developer's API key. Available @ https://steamcommunity.com/dev/apikey
  "steamKey":  "steamKey",
  
  // [Optional - Music commands] Your Google Developer's API key. Available @ https://console.developers.google.com/
  "googleKey":  "googleKey",

  // [Optional - Push bot's data to private github repo command] Your Github's account & information
  "githubUser": "githubUser",
  "githubPass": "githubPass",
  "githubRepo": "githubRepo",
  "githubCommitAuthor": "githubCommitAuthor",

  // [Optional - Interval bot stats] Your default channel's ID, or your preferred channel for the bot the post its stats
  "statsChannel": "statsChannel",
  
  // [Optional - Interval bot stats] Your default channel's ID, or your preferred channel for the bot the post the server's leaderboard rankings
  "leaderboardChannel": "leaderboardChannel",

  // [Optional - DOTA2-themed server rankings] Replace with our own server ranks/roles' IDs. WIP at the moment!
  "ranking": {
    "rank0": {
      "title": "Ascendant Immortal",
      "id": "457896092827254808",
      "points": "100000"
    },
    "rank1": {
      "title": "Legacy Immortal",
      "id": "457896331327832065",
      "points": "75000"
    },
    "rank2": {
      "title": "Elder Immortal",
      "id": "457896408482185227",
      "points": "50000"
    },
    "rank3": {
      "title": "Exalted Immortal",
      "id": "457896441302482974",
      "points": "48000"
    },
    "rank4": {
      "title": "Infused Immortal",
      "id": "457896576417792002",
      "points": "47250"
    },
    "rank5": {
      "title": "Corrupted Immortal",
      "id": "457896621120815119",
      "points": "46500"
    },
    "rank6": {
      "title": "Cursed Immortal",
      "id": "457896844152799232",
      "points": "45750"
    },
    "rank7": {
      "title": "Genuine Immortal",
      "id": "457896900939612167",
      "points": "45000"
    },
    "rank8": {
      "title": "Heroic Immortal",
      "id": "457896970426515479",
      "points": "44250"
    },
    "rank9": {
      "title": "Auspicious Immortal",
      "id": "457897042866470912",
      "points": "43500"
    },
    "rank10": {
      "title": "Inscribed Immortal",
      "id": "457897143709990912",
      "points": "42750"
    },
    "rank11": {
      "title": "Exalted Divine",
      "id": "457897212626731008",
      "points": "42000"
    },
    "rank12": {
      "title": "Infused Divine",
      "id": "457897260643123200",
      "points": "41250"
    },
    "rank13": {
      "title": "Corrupted Divine",
      "id": "457897319149600779",
      "points": "40500"
    },
    "rank14": {
      "title": "Cursed Divine",
      "id": "457897523026198528",
      "points": "39750"
    },
    "rank15": {
      "title": "Genuine Divine",
      "id": "457897612960333834",
      "points": "39000"
    },
    "rank16": {
      "title": "Heroic Divine",
      "id": "457897849989103617",
      "points": "38250"
    },
    "rank16": {
      "title": "Auspicious Divine",
      "id": "457897953777025039",
      "points": "37500"
    },
    "rank17": {
      "title": "Inscribed Divine",
      "id": "457898020462395422",
      "points": "36750"
    },
    "rank17": {
      "title": "Exalted Ancient",
      "id": "457898202880933891",
      "points": "36000"
    },
    "rank18": {
      "title": "Infused Ancient",
      "id": "457898453964554241",
      "points": "35250"
    },
    "rank19": {
      "title": "Corrupted Ancient",
      "id": "457898614614917124",
      "points": "34500"
    },
    "rank20": {
      "title": "Cursed Ancient",
      "id": "457898692590960650",
      "points": "33750"
    },
    "rank21": {
      "title": "Genuine Ancient",
      "id": "457898924699811852",
      "points": "33000"
    },
    "rank22": {
      "title": "Heroic Ancient",
      "id": "457899014478888971",
      "points": "32250"
    },
    "rank23": {
      "title": "Auspicious Ancient",
      "id": "457899092144816128",
      "points": "31500"
    },
    "rank24": {
      "title": "Inscribed Ancient",
      "id": "457899266384592907",
      "points": "30750"
    },
    "rank25": {
      "title": "Exalted Legend",
      "id": "457899830996369409",
      "points": "30000"
    },
    "rank26": {
      "title": "Infused Legend",
      "id": "457898453964554241",
      "points": "29250"
    },
    "rank27": {
      "title": "Corrupted Legend",
      "id": "467939207986413570",
      "points": "28500"
    },
    "rank28": {
      "title": "Cursed Legend",
      "id": "457900025461211137",
      "points": "27750"
    },
    "rank29": {
      "title": "Genuine Legend",
      "id": "457900077583826945",
      "points": "27000"
    },
    "rank30": {
      "title": "Heroic Legend",
      "id": "457900166360465408",
      "points": "26250"
    },
    "rank31": {
      "title": "Auspicious Legend",
      "id": "457900270379335681",
      "points": "25500"
    },
    "rank32": {
      "title": "Inscribed Legend",
      "id": "457900350402330625",
      "points": "24750"
    },
    "rank33": {
      "title": "Exalted Archon",
      "id": "457900483756163073",
      "points": "24000"
    },
    "rank34": {
      "title": "Infused Archon",
      "id": "457900682016456717",
      "points": "23250"
    },
    "rank35": {
      "title": "Corrupted Archon",
      "id": "457900747292672002",
      "points": "22500"
    },
    "rank36": {
      "title": "Cursed Archon",
      "id": "457900803881959437",
      "points": "21750"
    },
    "rank37": {
      "title": "Genuine Archon",
      "id": "457900884257538059",
      "points": "21000"
    },
    "rank38": {
      "title": "Heroic Archon",
      "id": "457901287409844225",
      "points": "20250"
    },
    "rank39": {
      "title": "Auspicious Archon",
      "id": "457901420926992385",
      "points": "19500"
    },
    "rank40": {
      "title": "Inscribed Archon",
      "id": "457901509481594892",
      "points": "18750"
    },
    "rank41": {
      "title": "Exalted Crusader",
      "id": "457901942379773962",
      "points": "18000"
    },
    "rank42": {
      "title": "Infused Crusader",
      "id": "457902046755028994",
      "points": "17250"
    },
    "rank43": {
      "title": "Corrupted Crusader",
      "id": "457902096960847883",
      "points": "16500"
    },
    "rank44": {
      "title": "Cursed Crusader",
      "id": "457902324887584769",
      "points": "15750"
    },
    "rank45": {
      "title": "Genuine Crusader",
      "id": "457902531839000596",
      "points": "15000"
    },
    "rank46": {
      "title": "Heroic Crusader",
      "id": "457902595390963712",
      "points": "14250"
    },
    "rank47": {
      "title": "Auspicious Crusader",
      "id": "457902728652390402",
      "points": "13500"
    },
    "rank48": {
      "title": "Inscribed Crusader",
      "id": "457902840094916614",
      "points": "12750"
    },
    "rank49": {
      "title": "Exalted Guardian",
      "id": "457903068109996034",
      "points": "12000"
    },
    "rank50": {
      "title": "Infused Guardian",
      "id": "457903161160630302",
      "points": "11250"
    },
    "rank51": {
      "title": "Corrupted Guardian",
      "id": "457903198443798528",
      "points": "10500"
    },
    "rank52": {
      "title": "Cursed Guardian",
      "id": "457903247626076180",
      "points": "9750"
    },
    "rank53": {
      "title": "Genuine Guardian",
      "id": "457902531839000596",
      "points": "9000"
    },
    "rank54": {
      "title": "Heroic Guardian",
      "id": "457903496205959178",
      "points": "8250"
    },
    "rank55": {
      "title": "Auspicious Guardian",
      "id": "457903558528991232",
      "points": "7500"
    },
    "rank56": {
      "title": "Inscribed Guardian",
      "id": "457903609011765260",
      "points": "6750"
    },
    "rank57": {
      "title": "Exalted Herald",
      "id": "457903705094881300",
      "points": "6000"
    },
    "rank58": {
      "title": "Infused Herald",
      "id": "457903889090478081",
      "points": "5250"
    },
    "rank59": {
      "title": "Corrupted Herald",
      "id": "457903988512260096",
      "points": "4500"
    },
    "rank60": {
      "title": "Cursed Herald",
      "id": "457904138701897742",
      "points": "3750"
    },
    "rank61": {
      "title": "Genuine Herald",
      "id": "457904248756371466",
      "points": "3000"
    },
    "rank62": {
      "title": "Heroic Herald",
      "id": "457904332206112769",
      "points": "2250"
    },
    "rank63": {
      "title": "Auspicious Herald",
      "id": "457904386945974284",
      "points": "1500"
    },
    "rank64": {
      "title": "Inscribed Herald",
      "id": "457904483373154305",
      "points": "750"
    }
  },

  // Default per-server settings. These settings are entered in a database on first load, 
  // And are then completely ignored from this file. To modify default settings, use the `conf` command.
  // DO NOT REMOVE THIS BEFORE YOUR BOT IS LOADED AND FUNCTIONAL.
  
  "defaultSettings" : {
    "prefix": "!",
    "modRole": "Moderator",
    "adminRole": "Administrator",
    "systemNotice": "true",
    "welcomeEnabled": "true",
    "welcomeChannel": "general",
    "socialNotice": "true",
    "socialSystem": "true",
    "socialInventory": "true",
    "scoreTime": "5",
    "dailyTime": "24",
    "pointsReward": "200",
    "minPoints": "1",
    "maxPoints": "50",
    "costMulti": "2"
  },

  // PERMISSION LEVEL DEFINITIONS.

  permLevels: [
    // This is the lowest permisison level, this is for non-roled users.
    { level: 0,
      name: "User", 
      // Don't bother checking, just return true which allows them to execute any command their
      // level allows them to.
      check: () => true
    },

    // This is your permission level, the staff levels should always be above the rest of the roles.
    { level: 2,
      // This is the name of the role.
      name: "Moderator",
      // The following lines check the guild the message came from for the roles.
      // Then it checks if the member that authored the message has the role.
      // If they do return true, which will allow them to execute the command in question.
      // If they don't then return false, which will prevent them from executing the command.
      check: (message) => {
        try {
          const modRole = message.guild.roles.find(r => r.name.toLowerCase() === message.settings.modRole.toLowerCase());
          if (modRole && message.member.roles.has(modRole.id)) return true;
        } catch (e) {
          return false;
        }
      }
    },

    { level: 3,
      name: "Administrator", 
      check: (message) => {
        try {
          const adminRole = message.guild.roles.find(r => r.name.toLowerCase() === message.settings.adminRole.toLowerCase());
          return (adminRole && message.member.roles.has(adminRole.id));
        } catch (e) {
          return false;
        }
      }
    },
    // This is the server owner.
    { level: 4,
      name: "Server Owner", 
      // Simple check, if the guild owner id matches the message author's ID, then it will return true.
      // Otherwise it will return false.
      check: (message) => message.channel.type === "text" ? (message.guild.owner.user.id === message.author.id ? true : false) : false
    },

    // Bot Support is a special inbetween level that has the equivalent of server owner access
    // to any server they joins, in order to help troubleshoot the bot on behalf of owners.
    { level: 8,
      name: "Bot Support",
      // The check is by reading if an ID is part of this array. Yes, this means you need to
      // change this and reboot the bot to add a support user. Make it better yourself!
      check: (message) => config.supports.includes(message.author.id)
    },

    // Bot Admin has some limited access like rebooting the bot or reloading commands.
    { level: 9,
      name: "Bot Admin",
      check: (message) => config.admins.includes(message.author.id)
    },

    // This is the bot owner, this should be the highest permission level available.
    // The reason this should be the highest level is because of dangerous commands such as eval
    // or exec (if the owner has that).
    { level: 10,
      name: "Bot Owner", 
      // Another simple check, compares the message author id to the one stored in the config file.
      check: (message) => message.client.appInfo.owner.id === message.author.id
    }
  ]
};

module.exports = config;
